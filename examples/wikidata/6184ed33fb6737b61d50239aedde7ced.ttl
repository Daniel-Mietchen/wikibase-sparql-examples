@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-6184ed33fb6737b61d50239aedde7ced> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  rdfs:comment "TODO"@en;
  dcterms:isPartOf <https://www.wikidata.org//wiki/User:Trilotat/SPARQL>, <https://www.wikidata.org//wiki/User_talk:Trilotat/Archive/2019/1>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  schema:target <https://query.wikidata.org/sparql>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?errata ?errataLabel ?itemLabel ?item
WHERE 
{
  
  ?errata wdt:P31 wd:Q1348305 .                  # ?errata is an errata
  filter not exists {?itemZ wdt:P2507 ?errata . } # there's no ?item pointing to the errata.
  ?errata rdfs:label ?errataLabel . filter(lang(?errataLabel)=\"en\")
  filter(strstarts(?errataLabel,\"Corrigendum:\"))
  bind(replace(?errataLabel,\"Corrigendum: \",\"\") as ?itemLabel) .
  ?item rdfs:label ?itemLabel.
  filter(strlen(?itemLabel)>20)
  filter(?item != ?errata)
}""";
  <http://example.org/bigdata_select> """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?errata ?errataLabel ?itemLabel ?item
WHERE 
{
  hint:Query hint:optimizer \"None\" .
  ?errata wdt:P31 wd:Q1348305 .                  # ?errata is an errata
  filter not exists {?itemZ wdt:P2507 ?errata . } # there's no ?item pointing to the errata.
  ?errata rdfs:label ?errataLabel . filter(lang(?errataLabel)=\"en\")
  filter(strstarts(?errataLabel,\"Corrigendum:\"))
  bind(replace(?errataLabel,\"Corrigendum: \",\"\") as ?itemLabel) .
  ?item rdfs:label ?itemLabel.
  filter(strlen(?itemLabel)>20)
  filter(?item != ?errata)
}""" .
