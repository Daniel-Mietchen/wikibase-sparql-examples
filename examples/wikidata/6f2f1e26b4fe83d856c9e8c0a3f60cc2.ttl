@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-6f2f1e26b4fe83d856c9e8c0a3f60cc2> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  rdfs:comment "TODO"@en;
  dcterms:isPartOf <https://www.wikidata.org//wiki/User:M%C3%A1t%C3%A9/ratings/MSD>,
    <https://www.wikidata.org//wiki/User:M%C3%A1t%C3%A9/ratings>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  schema:target <https://query.wikidata.org/sparql>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?rating (round(avg(?dif)*1000)/1000 AS ?average) (count(?dif) AS ?total) (round(avg(?count)*10)/10 AS ?count)
WHERE {
   {
  SELECT ?film (avg(?age0) as ?age) ?rating
  WHERE {
    [] wdt:P31/wdt:P279* wd:Q24716199; wikibase:directClaim ?p; rdfs:label ?rating FILTER(lang(?rating)=\"en\") .
    ?film wdt:P31/wdt:P279* wd:Q11424; ?p [ wdt:P2899 ?age0 ] .
  } GROUP BY ?film ?rating
}  {
    SELECT ?film (avg(?age) AS ?avg) (count(?rating)-1 as ?count)
    WHERE {
       {
  SELECT ?film (avg(?age0) as ?age) ?rating
  WHERE {
    [] wdt:P31/wdt:P279* wd:Q24716199; wikibase:directClaim ?p; rdfs:label ?rating FILTER(lang(?rating)=\"en\") .
    ?film wdt:P31/wdt:P279* wd:Q11424; ?p [ wdt:P2899 ?age0 ] .
  } GROUP BY ?film ?rating
}    } GROUP BY ?film HAVING (?count > 0)
  } 
  BIND (?age-?avg AS ?dif)
} GROUP BY ?rating""";
  <http://example.org/bigdata_select> """SELECT ?rating (round(avg(?dif)*1000)/1000 AS ?average) (count(?dif) AS ?total) (round(avg(?count)*10)/10 AS ?count)
WITH {
  SELECT ?film (avg(?age0) as ?age) ?rating
  WHERE {
    [] wdt:P31/wdt:P279* wd:Q24716199; wikibase:directClaim ?p; rdfs:label ?rating FILTER(lang(?rating)=\"en\") .
    ?film wdt:P31/wdt:P279* wd:Q11424; ?p [ wdt:P2899 ?age0 ] .
  } GROUP BY ?film ?rating
} AS %films
WHERE {
  INCLUDE %films
  {
    SELECT ?film (avg(?age) AS ?avg) (count(?rating)-1 as ?count)
    WHERE {
      INCLUDE %films
    } GROUP BY ?film HAVING (?count > 0)
  } 
  BIND (?age-?avg AS ?dif)
} GROUP BY ?rating""" .
